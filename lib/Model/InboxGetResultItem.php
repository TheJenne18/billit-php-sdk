<?php
/**
 * InboxGetResultItem
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Billit.API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.21
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * InboxGetResultItem Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InboxGetResultItem implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'InboxGetResultItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'inbox_item_id' => 'int',
        'sender_peppol_id' => 'string',
        'peppol_document_type' => 'string',
        'receiver_peppol_id' => 'string',
        'sender_company_id' => 'string',
        'receiver_company_id' => 'string',
        'creation_date' => '\DateTime',
        'peppol_file_id' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'inbox_item_id' => 'int32',
        'sender_peppol_id' => null,
        'peppol_document_type' => null,
        'receiver_peppol_id' => null,
        'sender_company_id' => null,
        'receiver_company_id' => null,
        'creation_date' => 'date-time',
        'peppol_file_id' => 'uuid'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'inbox_item_id' => 'InboxItemID',
        'sender_peppol_id' => 'SenderPeppolID',
        'peppol_document_type' => 'PeppolDocumentType',
        'receiver_peppol_id' => 'ReceiverPeppolID',
        'sender_company_id' => 'SenderCompanyID',
        'receiver_company_id' => 'ReceiverCompanyID',
        'creation_date' => 'CreationDate',
        'peppol_file_id' => 'PeppolFileID'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'inbox_item_id' => 'setInboxItemId',
        'sender_peppol_id' => 'setSenderPeppolId',
        'peppol_document_type' => 'setPeppolDocumentType',
        'receiver_peppol_id' => 'setReceiverPeppolId',
        'sender_company_id' => 'setSenderCompanyId',
        'receiver_company_id' => 'setReceiverCompanyId',
        'creation_date' => 'setCreationDate',
        'peppol_file_id' => 'setPeppolFileId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'inbox_item_id' => 'getInboxItemId',
        'sender_peppol_id' => 'getSenderPeppolId',
        'peppol_document_type' => 'getPeppolDocumentType',
        'receiver_peppol_id' => 'getReceiverPeppolId',
        'sender_company_id' => 'getSenderCompanyId',
        'receiver_company_id' => 'getReceiverCompanyId',
        'creation_date' => 'getCreationDate',
        'peppol_file_id' => 'getPeppolFileId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['inbox_item_id'] = isset($data['inbox_item_id']) ? $data['inbox_item_id'] : null;
        $this->container['sender_peppol_id'] = isset($data['sender_peppol_id']) ? $data['sender_peppol_id'] : null;
        $this->container['peppol_document_type'] = isset($data['peppol_document_type']) ? $data['peppol_document_type'] : null;
        $this->container['receiver_peppol_id'] = isset($data['receiver_peppol_id']) ? $data['receiver_peppol_id'] : null;
        $this->container['sender_company_id'] = isset($data['sender_company_id']) ? $data['sender_company_id'] : null;
        $this->container['receiver_company_id'] = isset($data['receiver_company_id']) ? $data['receiver_company_id'] : null;
        $this->container['creation_date'] = isset($data['creation_date']) ? $data['creation_date'] : null;
        $this->container['peppol_file_id'] = isset($data['peppol_file_id']) ? $data['peppol_file_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets inbox_item_id
     *
     * @return int
     */
    public function getInboxItemId()
    {
        return $this->container['inbox_item_id'];
    }

    /**
     * Sets inbox_item_id
     *
     * @param int $inbox_item_id inbox_item_id
     *
     * @return $this
     */
    public function setInboxItemId($inbox_item_id)
    {
        $this->container['inbox_item_id'] = $inbox_item_id;

        return $this;
    }

    /**
     * Gets sender_peppol_id
     *
     * @return string
     */
    public function getSenderPeppolId()
    {
        return $this->container['sender_peppol_id'];
    }

    /**
     * Sets sender_peppol_id
     *
     * @param string $sender_peppol_id sender_peppol_id
     *
     * @return $this
     */
    public function setSenderPeppolId($sender_peppol_id)
    {
        $this->container['sender_peppol_id'] = $sender_peppol_id;

        return $this;
    }

    /**
     * Gets peppol_document_type
     *
     * @return string
     */
    public function getPeppolDocumentType()
    {
        return $this->container['peppol_document_type'];
    }

    /**
     * Sets peppol_document_type
     *
     * @param string $peppol_document_type peppol_document_type
     *
     * @return $this
     */
    public function setPeppolDocumentType($peppol_document_type)
    {
        $this->container['peppol_document_type'] = $peppol_document_type;

        return $this;
    }

    /**
     * Gets receiver_peppol_id
     *
     * @return string
     */
    public function getReceiverPeppolId()
    {
        return $this->container['receiver_peppol_id'];
    }

    /**
     * Sets receiver_peppol_id
     *
     * @param string $receiver_peppol_id receiver_peppol_id
     *
     * @return $this
     */
    public function setReceiverPeppolId($receiver_peppol_id)
    {
        $this->container['receiver_peppol_id'] = $receiver_peppol_id;

        return $this;
    }

    /**
     * Gets sender_company_id
     *
     * @return string
     */
    public function getSenderCompanyId()
    {
        return $this->container['sender_company_id'];
    }

    /**
     * Sets sender_company_id
     *
     * @param string $sender_company_id sender_company_id
     *
     * @return $this
     */
    public function setSenderCompanyId($sender_company_id)
    {
        $this->container['sender_company_id'] = $sender_company_id;

        return $this;
    }

    /**
     * Gets receiver_company_id
     *
     * @return string
     */
    public function getReceiverCompanyId()
    {
        return $this->container['receiver_company_id'];
    }

    /**
     * Sets receiver_company_id
     *
     * @param string $receiver_company_id receiver_company_id
     *
     * @return $this
     */
    public function setReceiverCompanyId($receiver_company_id)
    {
        $this->container['receiver_company_id'] = $receiver_company_id;

        return $this;
    }

    /**
     * Gets creation_date
     *
     * @return \DateTime
     */
    public function getCreationDate()
    {
        return $this->container['creation_date'];
    }

    /**
     * Sets creation_date
     *
     * @param \DateTime $creation_date creation_date
     *
     * @return $this
     */
    public function setCreationDate($creation_date)
    {
        $this->container['creation_date'] = $creation_date;

        return $this;
    }

    /**
     * Gets peppol_file_id
     *
     * @return string
     */
    public function getPeppolFileId()
    {
        return $this->container['peppol_file_id'];
    }

    /**
     * Sets peppol_file_id
     *
     * @param string $peppol_file_id peppol_file_id
     *
     * @return $this
     */
    public function setPeppolFileId($peppol_file_id)
    {
        $this->container['peppol_file_id'] = $peppol_file_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


