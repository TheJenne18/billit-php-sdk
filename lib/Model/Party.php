<?php
/**
 * Party
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Billit.API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.21
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * Party Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Party implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Party';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'party_id' => 'int',
        'book_year_start' => '\DateTime',
        'nr' => 'string',
        'name' => 'string',
        'commercial_name' => 'string',
        'street' => 'string',
        'street_number' => 'string',
        'box' => 'string',
        'zipcode' => 'string',
        'city' => 'string',
        'country_code' => 'string',
        'iban' => 'string',
        'bic' => 'string',
        'mobile' => 'string',
        'phone' => 'string',
        'fax' => 'string',
        'email' => 'string',
        'website' => 'string',
        'contact' => 'string',
        'contact_first_name' => 'string',
        'contact_last_name' => 'string',
        'vat_number' => 'string',
        'peppol_identifier' => 'string',
        'rpr' => 'string',
        'last_modified' => '\DateTime',
        'created' => '\DateTime',
        'party_type' => 'string',
        'vat_liable' => 'bool',
        'accountant_code' => 'int',
        'gl_account_code' => 'int',
        'language' => 'string',
        'ventilation_code' => 'string',
        'external_provider_id' => 'string',
        'external_provider_tc' => 'string',
        'custom_fields' => '\Swagger\Client\Model\MutableKeyValuePairStringString[]',
        'bank_accounts' => '\Swagger\Client\Model\BankAccount[]',
        'default_payment_method_tc' => 'string',
        'default_paid' => 'bool',
        'display_name' => 'string',
        'default_transport_type_tc' => 'string',
        'financial_reduction_percentage_default' => 'double',
        'financial_reduction_days_default' => 'int',
        'default_expiry_offset' => 'int',
        'gl_default_expiry_offset' => 'int',
        'role' => 'string',
        'internal_info' => 'string',
        'vat_deductable' => 'bool',
        'default_reduction_percentage' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'party_id' => 'int32',
        'book_year_start' => 'date-time',
        'nr' => null,
        'name' => null,
        'commercial_name' => null,
        'street' => null,
        'street_number' => null,
        'box' => null,
        'zipcode' => null,
        'city' => null,
        'country_code' => null,
        'iban' => null,
        'bic' => null,
        'mobile' => null,
        'phone' => null,
        'fax' => null,
        'email' => null,
        'website' => null,
        'contact' => null,
        'contact_first_name' => null,
        'contact_last_name' => null,
        'vat_number' => null,
        'peppol_identifier' => null,
        'rpr' => null,
        'last_modified' => 'date-time',
        'created' => 'date-time',
        'party_type' => null,
        'vat_liable' => null,
        'accountant_code' => 'int32',
        'gl_account_code' => 'int64',
        'language' => null,
        'ventilation_code' => null,
        'external_provider_id' => null,
        'external_provider_tc' => null,
        'custom_fields' => null,
        'bank_accounts' => null,
        'default_payment_method_tc' => null,
        'default_paid' => null,
        'display_name' => null,
        'default_transport_type_tc' => null,
        'financial_reduction_percentage_default' => 'double',
        'financial_reduction_days_default' => 'int32',
        'default_expiry_offset' => 'int32',
        'gl_default_expiry_offset' => 'int64',
        'role' => null,
        'internal_info' => null,
        'vat_deductable' => null,
        'default_reduction_percentage' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'party_id' => 'PartyID',
        'book_year_start' => 'BookYearStart',
        'nr' => 'Nr',
        'name' => 'Name',
        'commercial_name' => 'CommercialName',
        'street' => 'Street',
        'street_number' => 'StreetNumber',
        'box' => 'Box',
        'zipcode' => 'Zipcode',
        'city' => 'City',
        'country_code' => 'CountryCode',
        'iban' => 'IBAN',
        'bic' => 'BIC',
        'mobile' => 'Mobile',
        'phone' => 'Phone',
        'fax' => 'Fax',
        'email' => 'Email',
        'website' => 'Website',
        'contact' => 'Contact',
        'contact_first_name' => 'ContactFirstName',
        'contact_last_name' => 'ContactLastName',
        'vat_number' => 'VATNumber',
        'peppol_identifier' => 'PeppolIdentifier',
        'rpr' => 'RPR',
        'last_modified' => 'LastModified',
        'created' => 'Created',
        'party_type' => 'PartyType',
        'vat_liable' => 'VATLiable',
        'accountant_code' => 'AccountantCode',
        'gl_account_code' => 'GLAccountCode',
        'language' => 'Language',
        'ventilation_code' => 'VentilationCode',
        'external_provider_id' => 'ExternalProviderID',
        'external_provider_tc' => 'ExternalProviderTC',
        'custom_fields' => 'CustomFields',
        'bank_accounts' => 'BankAccounts',
        'default_payment_method_tc' => 'DefaultPaymentMethodTC',
        'default_paid' => 'DefaultPaid',
        'display_name' => 'DisplayName',
        'default_transport_type_tc' => 'DefaultTransportTypeTC',
        'financial_reduction_percentage_default' => 'FinancialReductionPercentageDefault',
        'financial_reduction_days_default' => 'FinancialReductionDaysDefault',
        'default_expiry_offset' => 'DefaultExpiryOffset',
        'gl_default_expiry_offset' => 'GLDefaultExpiryOffset',
        'role' => 'Role',
        'internal_info' => 'InternalInfo',
        'vat_deductable' => 'VATDeductable',
        'default_reduction_percentage' => 'DefaultReductionPercentage'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'party_id' => 'setPartyId',
        'book_year_start' => 'setBookYearStart',
        'nr' => 'setNr',
        'name' => 'setName',
        'commercial_name' => 'setCommercialName',
        'street' => 'setStreet',
        'street_number' => 'setStreetNumber',
        'box' => 'setBox',
        'zipcode' => 'setZipcode',
        'city' => 'setCity',
        'country_code' => 'setCountryCode',
        'iban' => 'setIban',
        'bic' => 'setBic',
        'mobile' => 'setMobile',
        'phone' => 'setPhone',
        'fax' => 'setFax',
        'email' => 'setEmail',
        'website' => 'setWebsite',
        'contact' => 'setContact',
        'contact_first_name' => 'setContactFirstName',
        'contact_last_name' => 'setContactLastName',
        'vat_number' => 'setVatNumber',
        'peppol_identifier' => 'setPeppolIdentifier',
        'rpr' => 'setRpr',
        'last_modified' => 'setLastModified',
        'created' => 'setCreated',
        'party_type' => 'setPartyType',
        'vat_liable' => 'setVatLiable',
        'accountant_code' => 'setAccountantCode',
        'gl_account_code' => 'setGlAccountCode',
        'language' => 'setLanguage',
        'ventilation_code' => 'setVentilationCode',
        'external_provider_id' => 'setExternalProviderId',
        'external_provider_tc' => 'setExternalProviderTc',
        'custom_fields' => 'setCustomFields',
        'bank_accounts' => 'setBankAccounts',
        'default_payment_method_tc' => 'setDefaultPaymentMethodTc',
        'default_paid' => 'setDefaultPaid',
        'display_name' => 'setDisplayName',
        'default_transport_type_tc' => 'setDefaultTransportTypeTc',
        'financial_reduction_percentage_default' => 'setFinancialReductionPercentageDefault',
        'financial_reduction_days_default' => 'setFinancialReductionDaysDefault',
        'default_expiry_offset' => 'setDefaultExpiryOffset',
        'gl_default_expiry_offset' => 'setGlDefaultExpiryOffset',
        'role' => 'setRole',
        'internal_info' => 'setInternalInfo',
        'vat_deductable' => 'setVatDeductable',
        'default_reduction_percentage' => 'setDefaultReductionPercentage'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'party_id' => 'getPartyId',
        'book_year_start' => 'getBookYearStart',
        'nr' => 'getNr',
        'name' => 'getName',
        'commercial_name' => 'getCommercialName',
        'street' => 'getStreet',
        'street_number' => 'getStreetNumber',
        'box' => 'getBox',
        'zipcode' => 'getZipcode',
        'city' => 'getCity',
        'country_code' => 'getCountryCode',
        'iban' => 'getIban',
        'bic' => 'getBic',
        'mobile' => 'getMobile',
        'phone' => 'getPhone',
        'fax' => 'getFax',
        'email' => 'getEmail',
        'website' => 'getWebsite',
        'contact' => 'getContact',
        'contact_first_name' => 'getContactFirstName',
        'contact_last_name' => 'getContactLastName',
        'vat_number' => 'getVatNumber',
        'peppol_identifier' => 'getPeppolIdentifier',
        'rpr' => 'getRpr',
        'last_modified' => 'getLastModified',
        'created' => 'getCreated',
        'party_type' => 'getPartyType',
        'vat_liable' => 'getVatLiable',
        'accountant_code' => 'getAccountantCode',
        'gl_account_code' => 'getGlAccountCode',
        'language' => 'getLanguage',
        'ventilation_code' => 'getVentilationCode',
        'external_provider_id' => 'getExternalProviderId',
        'external_provider_tc' => 'getExternalProviderTc',
        'custom_fields' => 'getCustomFields',
        'bank_accounts' => 'getBankAccounts',
        'default_payment_method_tc' => 'getDefaultPaymentMethodTc',
        'default_paid' => 'getDefaultPaid',
        'display_name' => 'getDisplayName',
        'default_transport_type_tc' => 'getDefaultTransportTypeTc',
        'financial_reduction_percentage_default' => 'getFinancialReductionPercentageDefault',
        'financial_reduction_days_default' => 'getFinancialReductionDaysDefault',
        'default_expiry_offset' => 'getDefaultExpiryOffset',
        'gl_default_expiry_offset' => 'getGlDefaultExpiryOffset',
        'role' => 'getRole',
        'internal_info' => 'getInternalInfo',
        'vat_deductable' => 'getVatDeductable',
        'default_reduction_percentage' => 'getDefaultReductionPercentage'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const PARTY_TYPE_CUSTOMER = 'Customer';
    const PARTY_TYPE_SUPPLIER = 'Supplier';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getPartyTypeAllowableValues()
    {
        return [
            self::PARTY_TYPE_CUSTOMER,
            self::PARTY_TYPE_SUPPLIER,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['party_id'] = isset($data['party_id']) ? $data['party_id'] : null;
        $this->container['book_year_start'] = isset($data['book_year_start']) ? $data['book_year_start'] : null;
        $this->container['nr'] = isset($data['nr']) ? $data['nr'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['commercial_name'] = isset($data['commercial_name']) ? $data['commercial_name'] : null;
        $this->container['street'] = isset($data['street']) ? $data['street'] : null;
        $this->container['street_number'] = isset($data['street_number']) ? $data['street_number'] : null;
        $this->container['box'] = isset($data['box']) ? $data['box'] : null;
        $this->container['zipcode'] = isset($data['zipcode']) ? $data['zipcode'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['country_code'] = isset($data['country_code']) ? $data['country_code'] : null;
        $this->container['iban'] = isset($data['iban']) ? $data['iban'] : null;
        $this->container['bic'] = isset($data['bic']) ? $data['bic'] : null;
        $this->container['mobile'] = isset($data['mobile']) ? $data['mobile'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['fax'] = isset($data['fax']) ? $data['fax'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['website'] = isset($data['website']) ? $data['website'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['contact_first_name'] = isset($data['contact_first_name']) ? $data['contact_first_name'] : null;
        $this->container['contact_last_name'] = isset($data['contact_last_name']) ? $data['contact_last_name'] : null;
        $this->container['vat_number'] = isset($data['vat_number']) ? $data['vat_number'] : null;
        $this->container['peppol_identifier'] = isset($data['peppol_identifier']) ? $data['peppol_identifier'] : null;
        $this->container['rpr'] = isset($data['rpr']) ? $data['rpr'] : null;
        $this->container['last_modified'] = isset($data['last_modified']) ? $data['last_modified'] : null;
        $this->container['created'] = isset($data['created']) ? $data['created'] : null;
        $this->container['party_type'] = isset($data['party_type']) ? $data['party_type'] : null;
        $this->container['vat_liable'] = isset($data['vat_liable']) ? $data['vat_liable'] : null;
        $this->container['accountant_code'] = isset($data['accountant_code']) ? $data['accountant_code'] : null;
        $this->container['gl_account_code'] = isset($data['gl_account_code']) ? $data['gl_account_code'] : null;
        $this->container['language'] = isset($data['language']) ? $data['language'] : null;
        $this->container['ventilation_code'] = isset($data['ventilation_code']) ? $data['ventilation_code'] : null;
        $this->container['external_provider_id'] = isset($data['external_provider_id']) ? $data['external_provider_id'] : null;
        $this->container['external_provider_tc'] = isset($data['external_provider_tc']) ? $data['external_provider_tc'] : null;
        $this->container['custom_fields'] = isset($data['custom_fields']) ? $data['custom_fields'] : null;
        $this->container['bank_accounts'] = isset($data['bank_accounts']) ? $data['bank_accounts'] : null;
        $this->container['default_payment_method_tc'] = isset($data['default_payment_method_tc']) ? $data['default_payment_method_tc'] : null;
        $this->container['default_paid'] = isset($data['default_paid']) ? $data['default_paid'] : null;
        $this->container['display_name'] = isset($data['display_name']) ? $data['display_name'] : null;
        $this->container['default_transport_type_tc'] = isset($data['default_transport_type_tc']) ? $data['default_transport_type_tc'] : null;
        $this->container['financial_reduction_percentage_default'] = isset($data['financial_reduction_percentage_default']) ? $data['financial_reduction_percentage_default'] : null;
        $this->container['financial_reduction_days_default'] = isset($data['financial_reduction_days_default']) ? $data['financial_reduction_days_default'] : null;
        $this->container['default_expiry_offset'] = isset($data['default_expiry_offset']) ? $data['default_expiry_offset'] : null;
        $this->container['gl_default_expiry_offset'] = isset($data['gl_default_expiry_offset']) ? $data['gl_default_expiry_offset'] : null;
        $this->container['role'] = isset($data['role']) ? $data['role'] : null;
        $this->container['internal_info'] = isset($data['internal_info']) ? $data['internal_info'] : null;
        $this->container['vat_deductable'] = isset($data['vat_deductable']) ? $data['vat_deductable'] : null;
        $this->container['default_reduction_percentage'] = isset($data['default_reduction_percentage']) ? $data['default_reduction_percentage'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getPartyTypeAllowableValues();
        if (!is_null($this->container['party_type']) && !in_array($this->container['party_type'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'party_type', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets party_id
     *
     * @return int
     */
    public function getPartyId()
    {
        return $this->container['party_id'];
    }

    /**
     * Sets party_id
     *
     * @param int $party_id party_id
     *
     * @return $this
     */
    public function setPartyId($party_id)
    {
        $this->container['party_id'] = $party_id;

        return $this;
    }

    /**
     * Gets book_year_start
     *
     * @return \DateTime
     */
    public function getBookYearStart()
    {
        return $this->container['book_year_start'];
    }

    /**
     * Sets book_year_start
     *
     * @param \DateTime $book_year_start book_year_start
     *
     * @return $this
     */
    public function setBookYearStart($book_year_start)
    {
        $this->container['book_year_start'] = $book_year_start;

        return $this;
    }

    /**
     * Gets nr
     *
     * @return string
     */
    public function getNr()
    {
        return $this->container['nr'];
    }

    /**
     * Sets nr
     *
     * @param string $nr nr
     *
     * @return $this
     */
    public function setNr($nr)
    {
        $this->container['nr'] = $nr;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets commercial_name
     *
     * @return string
     */
    public function getCommercialName()
    {
        return $this->container['commercial_name'];
    }

    /**
     * Sets commercial_name
     *
     * @param string $commercial_name commercial_name
     *
     * @return $this
     */
    public function setCommercialName($commercial_name)
    {
        $this->container['commercial_name'] = $commercial_name;

        return $this;
    }

    /**
     * Gets street
     *
     * @return string
     */
    public function getStreet()
    {
        return $this->container['street'];
    }

    /**
     * Sets street
     *
     * @param string $street street
     *
     * @return $this
     */
    public function setStreet($street)
    {
        $this->container['street'] = $street;

        return $this;
    }

    /**
     * Gets street_number
     *
     * @return string
     */
    public function getStreetNumber()
    {
        return $this->container['street_number'];
    }

    /**
     * Sets street_number
     *
     * @param string $street_number street_number
     *
     * @return $this
     */
    public function setStreetNumber($street_number)
    {
        $this->container['street_number'] = $street_number;

        return $this;
    }

    /**
     * Gets box
     *
     * @return string
     */
    public function getBox()
    {
        return $this->container['box'];
    }

    /**
     * Sets box
     *
     * @param string $box box
     *
     * @return $this
     */
    public function setBox($box)
    {
        $this->container['box'] = $box;

        return $this;
    }

    /**
     * Gets zipcode
     *
     * @return string
     */
    public function getZipcode()
    {
        return $this->container['zipcode'];
    }

    /**
     * Sets zipcode
     *
     * @param string $zipcode zipcode
     *
     * @return $this
     */
    public function setZipcode($zipcode)
    {
        $this->container['zipcode'] = $zipcode;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string $city city
     *
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets country_code
     *
     * @return string
     */
    public function getCountryCode()
    {
        return $this->container['country_code'];
    }

    /**
     * Sets country_code
     *
     * @param string $country_code country_code
     *
     * @return $this
     */
    public function setCountryCode($country_code)
    {
        $this->container['country_code'] = $country_code;

        return $this;
    }

    /**
     * Gets iban
     *
     * @return string
     */
    public function getIban()
    {
        return $this->container['iban'];
    }

    /**
     * Sets iban
     *
     * @param string $iban iban
     *
     * @return $this
     */
    public function setIban($iban)
    {
        $this->container['iban'] = $iban;

        return $this;
    }

    /**
     * Gets bic
     *
     * @return string
     */
    public function getBic()
    {
        return $this->container['bic'];
    }

    /**
     * Sets bic
     *
     * @param string $bic bic
     *
     * @return $this
     */
    public function setBic($bic)
    {
        $this->container['bic'] = $bic;

        return $this;
    }

    /**
     * Gets mobile
     *
     * @return string
     */
    public function getMobile()
    {
        return $this->container['mobile'];
    }

    /**
     * Sets mobile
     *
     * @param string $mobile mobile
     *
     * @return $this
     */
    public function setMobile($mobile)
    {
        $this->container['mobile'] = $mobile;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string $phone phone
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets fax
     *
     * @return string
     */
    public function getFax()
    {
        return $this->container['fax'];
    }

    /**
     * Sets fax
     *
     * @param string $fax fax
     *
     * @return $this
     */
    public function setFax($fax)
    {
        $this->container['fax'] = $fax;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets website
     *
     * @return string
     */
    public function getWebsite()
    {
        return $this->container['website'];
    }

    /**
     * Sets website
     *
     * @param string $website website
     *
     * @return $this
     */
    public function setWebsite($website)
    {
        $this->container['website'] = $website;

        return $this;
    }

    /**
     * Gets contact
     *
     * @return string
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param string $contact contact
     *
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets contact_first_name
     *
     * @return string
     */
    public function getContactFirstName()
    {
        return $this->container['contact_first_name'];
    }

    /**
     * Sets contact_first_name
     *
     * @param string $contact_first_name contact_first_name
     *
     * @return $this
     */
    public function setContactFirstName($contact_first_name)
    {
        $this->container['contact_first_name'] = $contact_first_name;

        return $this;
    }

    /**
     * Gets contact_last_name
     *
     * @return string
     */
    public function getContactLastName()
    {
        return $this->container['contact_last_name'];
    }

    /**
     * Sets contact_last_name
     *
     * @param string $contact_last_name contact_last_name
     *
     * @return $this
     */
    public function setContactLastName($contact_last_name)
    {
        $this->container['contact_last_name'] = $contact_last_name;

        return $this;
    }

    /**
     * Gets vat_number
     *
     * @return string
     */
    public function getVatNumber()
    {
        return $this->container['vat_number'];
    }

    /**
     * Sets vat_number
     *
     * @param string $vat_number vat_number
     *
     * @return $this
     */
    public function setVatNumber($vat_number)
    {
        $this->container['vat_number'] = $vat_number;

        return $this;
    }

    /**
     * Gets peppol_identifier
     *
     * @return string
     */
    public function getPeppolIdentifier()
    {
        return $this->container['peppol_identifier'];
    }

    /**
     * Sets peppol_identifier
     *
     * @param string $peppol_identifier peppol_identifier
     *
     * @return $this
     */
    public function setPeppolIdentifier($peppol_identifier)
    {
        $this->container['peppol_identifier'] = $peppol_identifier;

        return $this;
    }

    /**
     * Gets rpr
     *
     * @return string
     */
    public function getRpr()
    {
        return $this->container['rpr'];
    }

    /**
     * Sets rpr
     *
     * @param string $rpr rpr
     *
     * @return $this
     */
    public function setRpr($rpr)
    {
        $this->container['rpr'] = $rpr;

        return $this;
    }

    /**
     * Gets last_modified
     *
     * @return \DateTime
     */
    public function getLastModified()
    {
        return $this->container['last_modified'];
    }

    /**
     * Sets last_modified
     *
     * @param \DateTime $last_modified last_modified
     *
     * @return $this
     */
    public function setLastModified($last_modified)
    {
        $this->container['last_modified'] = $last_modified;

        return $this;
    }

    /**
     * Gets created
     *
     * @return \DateTime
     */
    public function getCreated()
    {
        return $this->container['created'];
    }

    /**
     * Sets created
     *
     * @param \DateTime $created created
     *
     * @return $this
     */
    public function setCreated($created)
    {
        $this->container['created'] = $created;

        return $this;
    }

    /**
     * Gets party_type
     *
     * @return string
     */
    public function getPartyType()
    {
        return $this->container['party_type'];
    }

    /**
     * Sets party_type
     *
     * @param string $party_type party_type
     *
     * @return $this
     */
    public function setPartyType($party_type)
    {
        $allowedValues = $this->getPartyTypeAllowableValues();
        if (!is_null($party_type) && !in_array($party_type, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'party_type', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['party_type'] = $party_type;

        return $this;
    }

    /**
     * Gets vat_liable
     *
     * @return bool
     */
    public function getVatLiable()
    {
        return $this->container['vat_liable'];
    }

    /**
     * Sets vat_liable
     *
     * @param bool $vat_liable vat_liable
     *
     * @return $this
     */
    public function setVatLiable($vat_liable)
    {
        $this->container['vat_liable'] = $vat_liable;

        return $this;
    }

    /**
     * Gets accountant_code
     *
     * @return int
     */
    public function getAccountantCode()
    {
        return $this->container['accountant_code'];
    }

    /**
     * Sets accountant_code
     *
     * @param int $accountant_code accountant_code
     *
     * @return $this
     */
    public function setAccountantCode($accountant_code)
    {
        $this->container['accountant_code'] = $accountant_code;

        return $this;
    }

    /**
     * Gets gl_account_code
     *
     * @return int
     */
    public function getGlAccountCode()
    {
        return $this->container['gl_account_code'];
    }

    /**
     * Sets gl_account_code
     *
     * @param int $gl_account_code gl_account_code
     *
     * @return $this
     */
    public function setGlAccountCode($gl_account_code)
    {
        $this->container['gl_account_code'] = $gl_account_code;

        return $this;
    }

    /**
     * Gets language
     *
     * @return string
     */
    public function getLanguage()
    {
        return $this->container['language'];
    }

    /**
     * Sets language
     *
     * @param string $language language
     *
     * @return $this
     */
    public function setLanguage($language)
    {
        $this->container['language'] = $language;

        return $this;
    }

    /**
     * Gets ventilation_code
     *
     * @return string
     */
    public function getVentilationCode()
    {
        return $this->container['ventilation_code'];
    }

    /**
     * Sets ventilation_code
     *
     * @param string $ventilation_code ventilation_code
     *
     * @return $this
     */
    public function setVentilationCode($ventilation_code)
    {
        $this->container['ventilation_code'] = $ventilation_code;

        return $this;
    }

    /**
     * Gets external_provider_id
     *
     * @return string
     */
    public function getExternalProviderId()
    {
        return $this->container['external_provider_id'];
    }

    /**
     * Sets external_provider_id
     *
     * @param string $external_provider_id external_provider_id
     *
     * @return $this
     */
    public function setExternalProviderId($external_provider_id)
    {
        $this->container['external_provider_id'] = $external_provider_id;

        return $this;
    }

    /**
     * Gets external_provider_tc
     *
     * @return string
     */
    public function getExternalProviderTc()
    {
        return $this->container['external_provider_tc'];
    }

    /**
     * Sets external_provider_tc
     *
     * @param string $external_provider_tc external_provider_tc
     *
     * @return $this
     */
    public function setExternalProviderTc($external_provider_tc)
    {
        $this->container['external_provider_tc'] = $external_provider_tc;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return \Swagger\Client\Model\MutableKeyValuePairStringString[]
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param \Swagger\Client\Model\MutableKeyValuePairStringString[] $custom_fields custom_fields
     *
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }

    /**
     * Gets bank_accounts
     *
     * @return \Swagger\Client\Model\BankAccount[]
     */
    public function getBankAccounts()
    {
        return $this->container['bank_accounts'];
    }

    /**
     * Sets bank_accounts
     *
     * @param \Swagger\Client\Model\BankAccount[] $bank_accounts bank_accounts
     *
     * @return $this
     */
    public function setBankAccounts($bank_accounts)
    {
        $this->container['bank_accounts'] = $bank_accounts;

        return $this;
    }

    /**
     * Gets default_payment_method_tc
     *
     * @return string
     */
    public function getDefaultPaymentMethodTc()
    {
        return $this->container['default_payment_method_tc'];
    }

    /**
     * Sets default_payment_method_tc
     *
     * @param string $default_payment_method_tc default_payment_method_tc
     *
     * @return $this
     */
    public function setDefaultPaymentMethodTc($default_payment_method_tc)
    {
        $this->container['default_payment_method_tc'] = $default_payment_method_tc;

        return $this;
    }

    /**
     * Gets default_paid
     *
     * @return bool
     */
    public function getDefaultPaid()
    {
        return $this->container['default_paid'];
    }

    /**
     * Sets default_paid
     *
     * @param bool $default_paid default_paid
     *
     * @return $this
     */
    public function setDefaultPaid($default_paid)
    {
        $this->container['default_paid'] = $default_paid;

        return $this;
    }

    /**
     * Gets display_name
     *
     * @return string
     */
    public function getDisplayName()
    {
        return $this->container['display_name'];
    }

    /**
     * Sets display_name
     *
     * @param string $display_name display_name
     *
     * @return $this
     */
    public function setDisplayName($display_name)
    {
        $this->container['display_name'] = $display_name;

        return $this;
    }

    /**
     * Gets default_transport_type_tc
     *
     * @return string
     */
    public function getDefaultTransportTypeTc()
    {
        return $this->container['default_transport_type_tc'];
    }

    /**
     * Sets default_transport_type_tc
     *
     * @param string $default_transport_type_tc default_transport_type_tc
     *
     * @return $this
     */
    public function setDefaultTransportTypeTc($default_transport_type_tc)
    {
        $this->container['default_transport_type_tc'] = $default_transport_type_tc;

        return $this;
    }

    /**
     * Gets financial_reduction_percentage_default
     *
     * @return double
     */
    public function getFinancialReductionPercentageDefault()
    {
        return $this->container['financial_reduction_percentage_default'];
    }

    /**
     * Sets financial_reduction_percentage_default
     *
     * @param double $financial_reduction_percentage_default financial_reduction_percentage_default
     *
     * @return $this
     */
    public function setFinancialReductionPercentageDefault($financial_reduction_percentage_default)
    {
        $this->container['financial_reduction_percentage_default'] = $financial_reduction_percentage_default;

        return $this;
    }

    /**
     * Gets financial_reduction_days_default
     *
     * @return int
     */
    public function getFinancialReductionDaysDefault()
    {
        return $this->container['financial_reduction_days_default'];
    }

    /**
     * Sets financial_reduction_days_default
     *
     * @param int $financial_reduction_days_default financial_reduction_days_default
     *
     * @return $this
     */
    public function setFinancialReductionDaysDefault($financial_reduction_days_default)
    {
        $this->container['financial_reduction_days_default'] = $financial_reduction_days_default;

        return $this;
    }

    /**
     * Gets default_expiry_offset
     *
     * @return int
     */
    public function getDefaultExpiryOffset()
    {
        return $this->container['default_expiry_offset'];
    }

    /**
     * Sets default_expiry_offset
     *
     * @param int $default_expiry_offset default_expiry_offset
     *
     * @return $this
     */
    public function setDefaultExpiryOffset($default_expiry_offset)
    {
        $this->container['default_expiry_offset'] = $default_expiry_offset;

        return $this;
    }

    /**
     * Gets gl_default_expiry_offset
     *
     * @return int
     */
    public function getGlDefaultExpiryOffset()
    {
        return $this->container['gl_default_expiry_offset'];
    }

    /**
     * Sets gl_default_expiry_offset
     *
     * @param int $gl_default_expiry_offset gl_default_expiry_offset
     *
     * @return $this
     */
    public function setGlDefaultExpiryOffset($gl_default_expiry_offset)
    {
        $this->container['gl_default_expiry_offset'] = $gl_default_expiry_offset;

        return $this;
    }

    /**
     * Gets role
     *
     * @return string
     */
    public function getRole()
    {
        return $this->container['role'];
    }

    /**
     * Sets role
     *
     * @param string $role role
     *
     * @return $this
     */
    public function setRole($role)
    {
        $this->container['role'] = $role;

        return $this;
    }

    /**
     * Gets internal_info
     *
     * @return string
     */
    public function getInternalInfo()
    {
        return $this->container['internal_info'];
    }

    /**
     * Sets internal_info
     *
     * @param string $internal_info internal_info
     *
     * @return $this
     */
    public function setInternalInfo($internal_info)
    {
        $this->container['internal_info'] = $internal_info;

        return $this;
    }

    /**
     * Gets vat_deductable
     *
     * @return bool
     */
    public function getVatDeductable()
    {
        return $this->container['vat_deductable'];
    }

    /**
     * Sets vat_deductable
     *
     * @param bool $vat_deductable vat_deductable
     *
     * @return $this
     */
    public function setVatDeductable($vat_deductable)
    {
        $this->container['vat_deductable'] = $vat_deductable;

        return $this;
    }

    /**
     * Gets default_reduction_percentage
     *
     * @return double
     */
    public function getDefaultReductionPercentage()
    {
        return $this->container['default_reduction_percentage'];
    }

    /**
     * Sets default_reduction_percentage
     *
     * @param double $default_reduction_percentage default_reduction_percentage
     *
     * @return $this
     */
    public function setDefaultReductionPercentage($default_reduction_percentage)
    {
        $this->container['default_reduction_percentage'] = $default_reduction_percentage;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


